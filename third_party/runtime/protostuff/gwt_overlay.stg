Index: gwt_overlay.stg
===================================================================
--- gwt_overlay.stg	(revision 767)
+++ gwt_overlay.stg	(working copy)
@@ -60,7 +60,7 @@
 <eg:enum_header(eg=it, module=module, options=options)>
 <endif>
 
-public <if(!includeHeader)>static <endif>final class <eg.name> extends JavaScriptObject {
+public <if(!includeHeader)>static <endif>class <eg.name> extends JavaScriptObject {
         
     <eg.values:field_enum_value_declare(val=it, methodName="create"); separator="\n">
     
@@ -73,8 +73,8 @@
     }-*/;
     
     protected <eg.name>() {}
-    
-    public native int getNumber() /*-{
+
+    public final native int getNumber() /*-{
         <if(options.dev_mode)>
         return this[0];
         <else>
@@ -122,10 +122,25 @@
 <message:message_header(message=it, module=module, options=options)>
 <endif>
 
-public <if(!includeHeader)>static <endif>final class <message.name> extends JavaScriptObject <message:message_impl_declaration(message=it, options=options); format=" ">{
+public <if(!includeHeader)>static <endif>class <message.name> extends JavaScriptObject <message:message_impl_declaration(message=it, options=options); format=" ">{
 
     <message.nestedMessages:message_block(message=it, options=options)>
     <message.nestedEnumGroups:enum_block(eg=it, options=options)>
+
+    public static class Builder extends <message.name> {
+      protected Builder() { }
+      public final <message.name> build() {
+        return (<message.name>)this;
+      }
+      public static native Builder create() /*-{
+        return {
+        };
+      }-*/;
+    }
+
+    public static final Builder newBuilder() {
+      return Builder.create();
+    }
     
     /**
      * Creates a new <message.name> instance 
@@ -134,7 +149,7 @@
      */
     public static native <message.name> create() /*-{
         return {
-                        
+          "_protoMessageName": "<message.name>",              
         };
     }-*/;
 
@@ -148,6 +163,13 @@
     }-*/;
 
     /**
+     * Returns the name of this protocol buffer.
+     */
+    public static native String getProtocolBufferName(JavaScriptObject instance) /*-{
+        return instance._protoMessageName;
+    }-*/;
+
+    /**
      * Gets a <message.name> (casting) from a JavaScriptObject
      *
      * @param JavaScriptObject to cast
@@ -229,7 +251,7 @@
 
     protected <message.name>() {}
 
-    <message:message_getters_and_setters(message=it, options=options)>
+    <message:message_getters_and_setters(message=it, options=options, message=message)>
 
 }
 >>
@@ -321,17 +343,17 @@
 <endif>
 >>
 
-message_getters_and_setters(message, options) ::= <<
+message_getters_and_setters(message, options, message) ::= <<
 // getters and setters
-<message.fields:field_getters_and_setters(field=it, options=options)>
+<message.fields:field_getters_and_setters(field=it, options=options, message=message)>
 >>
 
-field_getters_and_setters(field, options) ::= <<
+field_getters_and_setters(field, options, message) ::= <<
 
 // <field.name; format="CC">
 <if(field.repeated)>
 
-public native <map_repeated_prefix.(field.class.simpleName)><map_repeated_value.(field.javaType)><map_repeated_suffix.(field.class.simpleName)> get<field.name; format="PC">Array() /*-{
+public final native <map_repeated_prefix.(field.class.simpleName)><map_repeated_value.(field.javaType)><map_repeated_suffix.(field.class.simpleName)> get<field.name; format="PC">Array() /*-{
     <if(field.enumField)>
     <if(options.dev_mode)>
     return @<field.enumGroup.fullName>::getArray(Lcom/google/gwt/core/client/JavaScriptObject;Ljava/lang/String;)(this, "<field:field_name_or_number(field=field,options=options)>");
@@ -343,26 +365,39 @@
     <endif>
 }-*/;
 
-public native void set<field.name; format="PC">Array(<map_repeated_prefix.(field.class.simpleName)><map_repeated_value.(field.javaType)><map_repeated_suffix.(field.class.simpleName)> <var(val=field.name, fmt="CC", options=options)>) /*-{
+public final java.util.List\<<map_repeated_value.(field.javaType)>\> get<field.name; format="PC">List() {
+    <map_repeated_prefix.(field.class.simpleName)><map_repeated_value.(field.javaType)><map_repeated_suffix.(field.class.simpleName)> array = get<field.name; format="PC">Array();
+    java.util.List\<<map_repeated_value.(field.javaType)>\> list = new java.util.ArrayList\<<map_repeated_value.(field.javaType)>\>();
+    if (array == null) {
+      return null; 
+    }
+    for (int i=0; i \< get<field.name; format="PC">Count(); i++) {
+      list.add(array.get(i));
+    }
+    return list;
+}
+
+public final native <message.name> set<field.name; format="PC">Array(<map_repeated_prefix.(field.class.simpleName)><map_repeated_value.(field.javaType)><map_repeated_suffix.(field.class.simpleName)> <var(val=field.name, fmt="CC", options=options)>) /*-{
     this["<field:field_name_or_number(field=it,options=options)>"] = <var(val=field.name, fmt="CC", options=options)>;
+    return this;
 }-*/;
 
-public native <map_repeated_prefix.(field.class.simpleName)><map_repeated_value.(field.javaType)><map_repeated_suffix.(field.class.simpleName)> clear<field.name; format="PC">Array() /*-{
+public final native <map_repeated_prefix.(field.class.simpleName)><map_repeated_value.(field.javaType)><map_repeated_suffix.(field.class.simpleName)> clear<field.name; format="PC">Array() /*-{
     return (this["<field:field_name_or_number(field=it,options=options)>"] = []);
 }-*/;
 <if(options.generate_helper_methods)>
 
-public <map_singular_value.(field.javaType)> get<field.name; format="PC">(int index) {
+public final <map_singular_value.(field.javaType)> get<field.name; format="PC">(int index) {
     <map_repeated_prefix.(field.class.simpleName)><map_repeated_value.(field.javaType)><map_repeated_suffix.(field.class.simpleName)> array = get<field.name; format="PC">Array();
     return array == null ? null : array.get(index);
 }
 
-public int get<field.name; format="PC">Count() {
+public final int get<field.name; format="PC">Count() {
     <map_repeated_prefix.(field.class.simpleName)><map_repeated_value.(field.javaType)><map_repeated_suffix.(field.class.simpleName)> array = get<field.name; format="PC">Array();
     return array == null ? 0 : array.length();
 }
 
-public void add<field.name; format="PC">(<map_singular_value.(field.javaType)> <var(val=field.name, fmt="CC", options=options)>) {
+public final void add<field.name; format="PC">(<map_singular_value.(field.javaType)> <var(val=field.name, fmt="CC", options=options)>) {
     <map_repeated_prefix.(field.class.simpleName)><map_repeated_value.(field.javaType)><map_repeated_suffix.(field.class.simpleName)> array = get<field.name; format="PC">Array();
     if(array == null)
         array = clear<field.name; format="PC">Array();
@@ -372,19 +407,20 @@
 <endif>
 <else>
 
-public native <map_singular_value.(field.javaType)> get<field.name; format="PC">() /*-{
+public final native <map_singular_value.(field.javaType)> get<field.name; format="PC">() /*-{
     <field:field_return_value(field=it,options=options)>
 }-*/;
 
-public native void set<field.name; format="PC">(<map_singular_value.(field.javaType)> <var(val=field.name, fmt="CC", options=options)>) /*-{
+public final native <message.name> set<field.name; format="PC">(<map_singular_value.(field.javaType)> <var(val=field.name, fmt="CC", options=options)>) /*-{
     this["<field:field_name_or_number(field=it,options=options)>"] = <var(val=field.name, fmt="CC", options=options)>;
+    return this;
 }-*/;
 
-public native void clear<field.name; format="PC">() /*-{
+public final native void clear<field.name; format="PC">() /*-{
     delete this["<field:field_name_or_number(field=it,options=options)>"];
 }-*/;
 
-public native boolean has<field.name; format="PC">() /*-{
+public final native boolean has<field.name; format="PC">() /*-{
     return this["<field:field_name_or_number(field=it,options=options)>"] != null;
 }-*/;
 
