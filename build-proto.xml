<project name="waveinabox_proto" default="all">
  <description>Generation of Protocol Buffers</description>

  <property file="build.properties" />
  <property file="build-proto.properties" />
  <property name="protoc" location="${protoc_dist}/src/protoc" />
  <property name="proto.stage" location="${staging}/proto" />

  <target name="init">
    <mkdir dir="${proto.stage}" />
    <mkdir dir="proto_src" />
    <mkdir dir="proto_gwt_src" />
  </target>

  <target name="clean" description="Cleans up the temp folders">
    <delete dir="${proto.stage}" />
  </target>

  <!-- Unzip all the .proto and .protodevel packages in the third party dependencies and move those
  from src to the staging folder -->
  <target name="stage" depends="init">
    <unzip dest="${proto.stage}">
      <fileset dir="${lib.runtime}">
        <include name="**/*.jar" />
      </fileset>
      <patternset>
        <include name="**/*.proto" />
        <include name="**/*.protodevel" />
      </patternset>
    </unzip>
    <copy todir="${proto.stage}">
      <fileset dir="${src}">
        <include name="**/*.proto" />
        <include name="**/*.protodevel" />
      </fileset>
    </copy>
  </target>

  <target name="all" depends="compile, compile_json" description="Compiles Java
      and Javascript classes from protocol buffers" />

  <target name="compile" depends="stage" description="Compiles Java files from protocol buffers">
    <exec executable="${protoc}">
      <arg value="--proto_path=${proto.stage}/" />
      <arg value="--proto_path=${protoc_dist}/src/" />
      <arg value="--java_out=proto_src" />
      <arg value="${proto.stage}/org/waveprotocol/box/server/rpc/rpc.proto" />
    </exec>

    <exec executable="${protoc}">
      <arg value="--proto_path=${proto.stage}/" />
      <arg value="--proto_path=${protoc_dist}/src" />
      <arg value="--java_out=proto_src" />
      <arg value="${proto.stage}/org/waveprotocol/box/server/waveserver/waveclient-rpc.proto" />
    </exec>
  </target>

  <!-- Requires all proto files to be on the same path! -->
  <target name="compile_json" depends="stage" description="Compiles Javascript files from protocol buffers">
    <java classname="com.dyuproject.protostuff.compiler.CompilerMain" fork="true" dir="${proto.stage}">
      <jvmarg value="-Dsource=org/waveprotocol/box/server/waveserver/waveclient-rpc.proto" />
      <jvmarg value="-DoutputDir=${basedir}/proto_gwt_src" />
      <jvmarg value="-Doutput=gwt_overlay" />
      <jvmarg value="-Dencoding=UTF-8" />
      <jvmarg value="-Doptions=numeric:true,generate_helper_methods:true" />
      <classpath>
        <fileset dir="" includes="third_party/runtime/protostuff/*.jar" />
        <pathelement location="third_party/codegen/stringtemplate/stringtemplate-3.2.1.jar" />
        <pathelement location="third_party/codegen/antlr/antlr-3.2.jar" />
      </classpath>
    </java>

    <java classname="com.dyuproject.protostuff.compiler.CompilerMain" fork="true" dir="${proto.stage}">
      <jvmarg value="-Dsource=org/waveprotocol/wave/federation/federation.protodevel" />
      <jvmarg value="-DoutputDir=${basedir}/proto_gwt_src" />
      <jvmarg value="-Doutput=gwt_overlay" />
      <jvmarg value="-Dencoding=UTF-8" />
      <jvmarg value="-Doptions=numeric:true,generate_helper_methods:true" />
      <classpath>
        <fileset dir="" includes="third_party/runtime/protostuff/*.jar" />
        <pathelement location="third_party/codegen/stringtemplate/stringtemplate-3.2.1.jar" />
        <pathelement location="third_party/codegen/antlr/antlr-3.2.jar" />
      </classpath>
    </java>
  </target>
</project>
