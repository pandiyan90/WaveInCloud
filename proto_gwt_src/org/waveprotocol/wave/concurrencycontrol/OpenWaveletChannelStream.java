// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from clientserver.proto

package org.waveprotocol.wave.concurrencycontrol;

import com.google.gwt.core.client.*;

public class OpenWaveletChannelStream extends JavaScriptObject  {


    public static class Builder extends OpenWaveletChannelStream {
      protected Builder() { }
      public final OpenWaveletChannelStream build() {
        return (OpenWaveletChannelStream)this;
      }
      public static native Builder create() /*-{
        return {
        };
      }-*/;
    }

    public static final Builder newBuilder() {
      return Builder.create();
    }
    
    /**
     * Creates a new OpenWaveletChannelStream instance 
     *
     * @return new OpenWaveletChannelStream instance
     */
    public static native OpenWaveletChannelStream create() /*-{
        return {
          "_protoMessageName": "OpenWaveletChannelStream",              
        };
    }-*/;

    /**
     * Creates a new JsArray<OpenWaveletChannelStream> instance 
     *
     * @return new JsArray<OpenWaveletChannelStream> instance
     */
    public static native JsArray<OpenWaveletChannelStream> createArray() /*-{
        return [];
    }-*/;

    /**
     * Returns the name of this protocol buffer.
     */
    public static native String getProtocolBufferName(JavaScriptObject instance) /*-{
        return instance._protoMessageName;
    }-*/;

    /**
     * Gets a OpenWaveletChannelStream (casting) from a JavaScriptObject
     *
     * @param JavaScriptObject to cast
     * @return OpenWaveletChannelStream
     */
    public static native OpenWaveletChannelStream get(JavaScriptObject jso) /*-{
        return jso;
    }-*/;

    /**
     * Gets a JsArray<OpenWaveletChannelStream> (casting) from a JavaScriptObject
     *
     * @param JavaScriptObject to cast
     * @return JsArray<OpenWaveletChannelStream> 
     */
    public static native JsArray<OpenWaveletChannelStream> getArray(JavaScriptObject jso) /*-{
        return jso;
    }-*/;

    /**
     * Parses a OpenWaveletChannelStream from a json string
     *
     * @param json string to be parsed/evaluated
     * @return OpenWaveletChannelStream 
     */
    public static native OpenWaveletChannelStream parse(String json) /*-{
        return eval("(" + json + ")");
    }-*/;

    /**
     * Parses a JsArray<OpenWaveletChannelStream> from a json string
     *
     * @param json string to be parsed/evaluated
     * @return JsArray<OpenWaveletChannelStream> 
     */
    public static native JsArray<OpenWaveletChannelStream> parseArray(String json) /*-{
        return eval("(" + json + ")");
    }-*/;
    
    /**
     * Serializes a json object to a json string.
     *
     * @param OpenWaveletChannelStream the object to serialize
     * @return String the serialized json string
     */
    public static native String stringify(OpenWaveletChannelStream obj) /*-{
        var buf = [];
        var _1 = obj["1"];
        if(_1 != null)
            buf.push("\"1\":\"" + _1 + "\"");
        var _2 = obj["2"];
        if(_2 != null)
            buf.push("\"2\":" + @org.waveprotocol.wave.concurrencycontrol.WaveletUpdate::stringify(Lorg/waveprotocol/wave/concurrencycontrol/WaveletUpdate;)(_2));
        var _3 = obj["3"];
        if(_3 != null)
            buf.push("\"3\":" + @org.waveprotocol.wave.federation.ProtocolHashedVersion::stringify(Lorg/waveprotocol/wave/federation/ProtocolHashedVersion;)(_3));
        var _4 = obj["4"];
        if(_4 != null)
            buf.push("\"4\":" + @org.waveprotocol.wave.concurrencycontrol.WaveletChannelTerminator::stringify(Lorg/waveprotocol/wave/concurrencycontrol/WaveletChannelTerminator;)(_4));

        return buf.length == 0 ? "{}" : "{" + buf.join(",") + "}";
    }-*/;
    
    public static native boolean isInitialized(OpenWaveletChannelStream obj) /*-{
        return true;
    }-*/;

    protected OpenWaveletChannelStream() {}

    // getters and setters

    // channelId

    public final native String getChannelId() /*-{
        return this["1"] || "";
    }-*/;

    public final native OpenWaveletChannelStream setChannelId(String channelId) /*-{
        this["1"] = channelId;
        return this;
    }-*/;

    public final native void clearChannelId() /*-{
        delete this["1"];
    }-*/;

    public final native boolean hasChannelId() /*-{
        return this["1"] != null;
    }-*/;

    // delta

    public final native WaveletUpdate getDelta() /*-{
        return this["2"];
    }-*/;

    public final native OpenWaveletChannelStream setDelta(WaveletUpdate delta) /*-{
        this["2"] = delta;
        return this;
    }-*/;

    public final native void clearDelta() /*-{
        delete this["2"];
    }-*/;

    public final native boolean hasDelta() /*-{
        return this["2"] != null;
    }-*/;

    // commitVersion

    public final native org.waveprotocol.wave.federation.ProtocolHashedVersion getCommitVersion() /*-{
        return this["3"];
    }-*/;

    public final native OpenWaveletChannelStream setCommitVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion commitVersion) /*-{
        this["3"] = commitVersion;
        return this;
    }-*/;

    public final native void clearCommitVersion() /*-{
        delete this["3"];
    }-*/;

    public final native boolean hasCommitVersion() /*-{
        return this["3"] != null;
    }-*/;

    // terminator

    public final native WaveletChannelTerminator getTerminator() /*-{
        return this["4"];
    }-*/;

    public final native OpenWaveletChannelStream setTerminator(WaveletChannelTerminator terminator) /*-{
        this["4"] = terminator;
        return this;
    }-*/;

    public final native void clearTerminator() /*-{
        delete this["4"];
    }-*/;

    public final native boolean hasTerminator() /*-{
        return this["4"] != null;
    }-*/;


}