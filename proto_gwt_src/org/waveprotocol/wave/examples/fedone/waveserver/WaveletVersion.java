// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from waveclient-rpc.proto

package org.waveprotocol.wave.examples.fedone.waveserver;

import com.google.gwt.core.client.*;

public class WaveletVersion extends JavaScriptObject  {


    public static class Builder extends WaveletVersion {
      protected Builder() { }
      public final WaveletVersion build() {
        return (WaveletVersion)this;
      }
      public static native Builder create() /*-{
        return {
        };
      }-*/;
    }

    public static final Builder newBuilder() {
      return Builder.create();
    }
    
    /**
     * Creates a new WaveletVersion instance 
     *
     * @return new WaveletVersion instance
     */
    public static native WaveletVersion create() /*-{
        return {
          "_protoMessageName": "WaveletVersion",              
        };
    }-*/;

    /**
     * Creates a new JsArray<WaveletVersion> instance 
     *
     * @return new JsArray<WaveletVersion> instance
     */
    public static native JsArray<WaveletVersion> createArray() /*-{
        return [];
    }-*/;

    /**
     * Returns the name of this protocol buffer.
     */
    public static native String getProtocolBufferName(JavaScriptObject instance) /*-{
        return instance._protoMessageName;
    }-*/;

    /**
     * Gets a WaveletVersion (casting) from a JavaScriptObject
     *
     * @param JavaScriptObject to cast
     * @return WaveletVersion
     */
    public static native WaveletVersion get(JavaScriptObject jso) /*-{
        return jso;
    }-*/;

    /**
     * Gets a JsArray<WaveletVersion> (casting) from a JavaScriptObject
     *
     * @param JavaScriptObject to cast
     * @return JsArray<WaveletVersion> 
     */
    public static native JsArray<WaveletVersion> getArray(JavaScriptObject jso) /*-{
        return jso;
    }-*/;

    /**
     * Parses a WaveletVersion from a json string
     *
     * @param json string to be parsed/evaluated
     * @return WaveletVersion 
     */
    public static native WaveletVersion parse(String json) /*-{
        return eval("(" + json + ")");
    }-*/;

    /**
     * Parses a JsArray<WaveletVersion> from a json string
     *
     * @param json string to be parsed/evaluated
     * @return JsArray<WaveletVersion> 
     */
    public static native JsArray<WaveletVersion> parseArray(String json) /*-{
        return eval("(" + json + ")");
    }-*/;
    
    /**
     * Serializes a json object to a json string.
     *
     * @param WaveletVersion the object to serialize
     * @return String the serialized json string
     */
    public static native String stringify(WaveletVersion obj) /*-{
        var buf = [];
        var _1 = obj["1"];
        if(_1 != null)
            buf.push("\"1\":\"" + _1 + "\"");
        var _2 = obj["2"];
        if(_2 != null)
            buf.push("\"2\":" + @org.waveprotocol.wave.federation.ProtocolHashedVersion::stringify(Lorg/waveprotocol/wave/federation/ProtocolHashedVersion;)(_2));

        return buf.length == 0 ? "{}" : "{" + buf.join(",") + "}";
    }-*/;
    
    public static native boolean isInitialized(WaveletVersion obj) /*-{
        return 
            obj["1"] != null 
            && obj["2"] != null;
    }-*/;

    protected WaveletVersion() {}

    // getters and setters

    // waveletId

    public final native String getWaveletId() /*-{
        return this["1"] || "";
    }-*/;

    public final native WaveletVersion setWaveletId(String waveletId) /*-{
        this["1"] = waveletId;
        return this;
    }-*/;

    public final native void clearWaveletId() /*-{
        delete this["1"];
    }-*/;

    public final native boolean hasWaveletId() /*-{
        return this["1"] != null;
    }-*/;

    // hashedVersion

    public final native org.waveprotocol.wave.federation.ProtocolHashedVersion getHashedVersion() /*-{
        return this["2"];
    }-*/;

    public final native WaveletVersion setHashedVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion hashedVersion) /*-{
        this["2"] = hashedVersion;
        return this;
    }-*/;

    public final native void clearHashedVersion() /*-{
        delete this["2"];
    }-*/;

    public final native boolean hasHashedVersion() /*-{
        return this["2"] != null;
    }-*/;


}