<!--
 * Copyright (C) 2010 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author: anorth@google.com (Alex North)
 -->
<project name="Wave Protocol Libraries" default="dist">

  <property file="build.properties"/>

  <!-- Common build file for subpackages to import. -->
  <property name="build.common.path" location="build-common.xml"/>

  <!-- Standard time properties and a timestamp pattern -->
  <tstamp>
    <format property="DSTAMP_INT" pattern="-yyyy-MM-dd"/>
  </tstamp>
  <property name="release.name" value="wave-libraries${DSTAMP_INT}.zip"/>

  <!-- Import common properties and macros. -->
  <import file="${build.common.path}"/>
  <import file="${build.macros.path}"/>

  <!-- Pull in the Emma tasks -->
  <taskdef resource="emma_ant.properties" classpathref="libpath"/>

  <!--=====
      Initialization
      =====-->

  <target name="clean" description="Clean up">
    <delete dir="${coverage.dir}"/>
    <delete dir="${dist.dir}"/>
    <delete dir="${docs.dir}"/>
    <delete dir="${build.dir}"/>
    <delete dir="${build.proto.dir}"/>
    <delete dir="${build.src.dir}"/>
    <delete dir="${build.test.dir}"/>
    <delete dir="${coverage.dir}"/>
  </target>

  <target name="init">
    <mkdir dir="${coverage.dir}"/>
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${docs.dir}"/>
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.proto.dir}"/>
    <mkdir dir="${build.src.dir}"/>
    <mkdir dir="${build.test.dir}"/>
    <mkdir dir="${coverage.dir}"/>
  </target>


  <!-- === IDE helper targets === -->

  <!-- Target to generate an eclipse .project file, for convenience.
       TODO(danilatos): Make this work on Windows as well. For now,
       windows users can just copy the .project_template file manually. -->
  <target name="eclipse">
    <exec executable="tools/eclipse.sh"/>
  </target>

  <!--=====
      Builds
      ======-->

  <!-- === Protocol buffer targets === -->

  <target name="build_proto" depends="init" description="Builds the Proto classes">
    <javac srcdir="${src.proto.dir}" destdir="${build.proto.dir}" classpathref="libpath"
      debug="true"/>
  </target>

  <target name="dist-proto" depends="build_proto" description="Builds the Proto Jar">
    <jar destfile="${dist.dir}\proto.jar" basedir="${build.proto.dir}"/>
    <jar destfile="${dist.dir}\proto-src.jar" basedir="${src.proto.dir}"/>
  </target>

  <!-- === Library targets === -->

  <target name="compile" depends="init, build_proto">
    <subant target="compile" inheritall="true">
      <property name="build.common.path" location="build-common.xml"/>
      <fileset dir="${src.dir}" includes="*/**/build.xml"/>
    </subant>
  </target>

  <target name="compile-tests" depends="compile">
    <subant target="compile-tests" inheritall="true">
      <property name="build.common.path" location="build-common.xml"/>
      <fileset dir="${test.dir}" includes="**/build.xml"/>
    </subant>
  </target>

  <!-- === Test targets === -->

  <target name="test" depends="compile-tests" description="Run small tests">
    <runtests forkmode="once" coverage="true">
      <fileset dir="${test.dir}">
        <include name="**/*Test.java"/>
        <exclude name="**/*GwtTest.java"/>
        <exclude name="**/*LargeTest.java"/>
      </fileset>
    </runtests>
  </target>

  <target name="test-large" depends="compile-tests" description="Runs large tests (slow)">
    <!-- Forking due to GWT test failure in shared JVM -->
    <runtests forkmode="perTest" coverage="true">
      <fileset dir="${test.dir}">
        <include name="**/*LargeTest.java"/>
      </fileset>
    </runtests>
  </target>
  
  <target name="test-gwt" depends="compile-tests" description="Runs GWT tests (slow)">
    <!-- Forking due to GWT test failure in shared JVM -->
    <!-- EMMA disabled due to GWT incompatibility -->
    <runtests forkmode="perTest" coverage="false">
      <fileset dir="${test.dir}">
        <include name="**/*GwtTest.java"/>
      </fileset>
    </runtests>
  </target>

  <target name="test-all" depends="compile-tests, test, test-gwt, test-large"
      description="Run all tests, including GWT"/>

  <!-- === Distribution targets === -->

  <target name="dist" depends="compile">
    <subant target="dist">
      <property name="build.common.path" location="build-common.xml"/>
      <property name="src.dir" location="src"/>
      <property name="build.dir" location="build"/>
      <property name="build.proto.dir" location="${build.dir}/proto"/>
      <property name="build.test.dir" location="${build.dir}/test"/>
      <property name="build.src.dir" location="${build.dir}/src"/>
      <property name="dist.dir" location="dist"/>

      <fileset dir="${src.dir}" includes="*/**/build.xml"/>
    </subant>
  </target>

  <target name="release" depends="dist" description="Creates a zip for a release">
    <delete file="${dist.dir}/${release.name}"/>
    <zip destfile="${dist.dir}/${release.name}">
      <zipfileset dir="${dist.dir}" includes="*.jar"/>
      <zipfileset dir="${basedir}" includes="COPYING"/>
    </zip>
  </target>

  <target name="doc" depends="init" description="Generates Javadoc">
    <javadoc destdir="${docs.dir}" author="yes" protected="yes"
      windowtitle="${ant.project.name} Documentation">
      <fileset dir="${src.dir}"/>
      <classpath>
        <path refid="libpath"/>
        <path location="${build.proto.dir}"/>
      </classpath>
      <doctitle>${ant.project.name}</doctitle>
      <footer>&lt;a href="http://www.waveprotocol.org/"&gt;Wave Project&lt;a/&gt;</footer>
    </javadoc>
  </target>
</project>
